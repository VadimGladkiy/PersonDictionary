<script src="@Url.Content("~/Scripts/jquery-1.6.1.min.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")"
        type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"
        type="text/javascript"></script>
<link href="~/StylesMy/Validation.css" rel="stylesheet" />
@model PersonDictionary.Models.Person
@{Html.EnableClientValidation();}
@{Html.EnableUnobtrusiveJavaScript();}
@using (Ajax.BeginForm("UserRegister","Home", ajaxOptions: new AjaxOptions
{
    HttpMethod = "Post",
}, 
    htmlAttributes: new { @class = "form-horizontal", role = "form" }))
    {
    @Html.ValidationSummary(true)

    <div class="form-horizontal container MyTextColor">
        <h4>Person</h4>
        <hr />
        
        @Html.ValidationSummary(true, "person did not pass a validation",
           new { @class = "text-danger" })
        <div class="form-group row">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
      
        <div class="form-group row">
            @Html.LabelFor(model => model.eMail, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.eMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.eMail, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group row">
            @Html.LabelFor(model => model.login, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.PasswordConfirm, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row ">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <input type="button" value="Close" class="btn close CloseForm" /> 
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $('.CloseForm').bind('click', function () {
        $('div#logOrRegistPlace').empty();
});
</script>

